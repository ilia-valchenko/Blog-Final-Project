@model IEnumerable<MvcPL.Models.Post.PostViewModel>

@{
    ViewBag.Title = "Posts";
}

@Styles.Render("~/Content/blog.css")
@Styles.Render("~/Content/Fontawesome/css/font-awesome.css")
@Styles.Render("~/Content/Fontawesome/css/font-awesome.min.css")
@Scripts.Render("~/scripts/jquery-1.10.2.js")
@Scripts.Render("~/scripts/jquery.unobtrusive-ajax.js")
@Scripts.Render("~/scripts/Custom/like.js")

@if (Request.IsAuthenticated && User.IsInRole("admin"))
{
    <p class="post-create-button">
        @Html.ActionLink("Add new post", "Create")
    </p>
}

@foreach (var item in Model)
{
    <article class="post">
        <h3>@Html.DisplayFor(modelItem => item.Title)</h3>
        <p>@Html.DisplayFor(modelItem => item.Description)</p>

        <ul class="tags">
            @foreach (var tag in item.Tags)
            {
                <li>@Html.RouteLink("#" + @tag.Name, "Hashtag", new { tagname = tag.Name })</li>
            }
         </ul>

         <ul class="post-footer">
            <li><small>Posted by: @Html.DisplayFor(modelItem => item.Author.Nickname)</small></li>
            <li><span id="comments"><i class="fa fa-comment"></i> @Html.DisplayFor(modelItem => item.NumberOfComments)</span></li>
            <li>
                <button type="submit" class="like-button" id=@item.Id>
                    <i class="fa fa-heart"></i>
                    <span id=@string.Format("like{0}", item.Id)>@Html.DisplayFor(modelItem => item.NumberOfLikes)</span>
                </button>
             </li>
             <li><small>@Html.DisplayFor(modelItem => item.PublishDate)</small></li>
          </ul>

        <ul class="post-control-panel">
            <li>@Html.ActionLink("Read more", "Details", new { id = item.Id })</li>
            @if (Request.IsAuthenticated && User.IsInRole("admin"))
            {
                <li>@Html.ActionLink("Edit", "Edit", new { id = item.Id })</li>
                <li class="delete-post-button">@Html.ActionLink("Delete", "Delete", new { id = item.Id })</li>
            }
        </ul>
    </article>
}

<div class="paging-wrapper">
    <ul class="pagination">
        <li><a href="#">«</a></li>
        @for (int i = 0; i < ViewBag.NumberOfPages; i++)
        {
            if (i == ViewBag.CurrentPage)
            {
                <li><a class="active" href="@Url.Action("Index", new { page = i })">@(i + 1)</a></li>
            }
            else
            {
                <li><a href="@Url.Action("Index", new { page = i })">@(i + 1)</a></li>
            }
        }
        <li><a href="#">»</a></li>
    </ul>
</div>


